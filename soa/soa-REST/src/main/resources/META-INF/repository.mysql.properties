###
#  Copyright 2013 Cloud4SOA, www.cloud4soa.eu
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.
#
###


#Spring Data Entity
sessionFactory.packagesToScan=eu.cloud4soa.relational.datamodel

#HSQLDB
dataSource.driverClass=com.mysql.jdbc.Driver
dataSource.user=cloud4soa
dataSource.password=cloud4soa
dataSource.protocol=jdbc:mysql://
dataSource.host=localhost
dataSource.port=3306
dataSource.database=c4sjena
hibernateProperties.org.hibernate.dialect.HSQLDialect=org.hibernate.dialect.MySQLDialect
dataSource.properties=

#Common
dataSource.minPoolSize=5
dataSource.maxPoolSize=100
dataSource.acquireIncrement=1
dataSource.idleConnectionTestPeriod=500
dataSource.maxStatements=50
dataSource.checkoutTimeout=10000

#use -DdeploymentMode=dev when starting tomcat/jetty or smth else, you can also bypass these arguments by using mavens
#<configuation>
#	<argLine> -DdeploymentMode=dev </argLine>
#</configuration> 
#tags
deploymentMode=dev



# Hibernate Common Properties

hibernateProperties.hibernate.show_sql=false
hibernateProperties.hibernate.cache.use_query_cache=false
hibernateProperties.hibernate.cache.use_second_level_cache=false
hibernateProperties.hibernate.hbm2ddl.auto=update
hibernateProperties.hibernate.cache.provider_class=org.hibernate.cache.NoCacheProvider
hibernateProperties.hibernate.hbm2ddl.import_files=/import.sql
hibernateProperties.connection.autocommit=false
#hibernateProperties.hibernate.connection.driver_class=net.bull.javamelody.JdbcDriver



# ------------------------------------------------------------------------------
# SEMANTIC repository properties
# ------------------------------------------------------------------------------

#RDF2GO IMPLEMENTATION
# - SESAME
rdf2go.sesame.implementationClass=org.openrdf.rdf2go.RepositoryModelFactory
# - JENA
rdf2go.jena.implementationClass=org.ontoware.rdf2go.impl.jena26.ModelFactoryImpl
# Selected implementation class
rdf2go.implementationClass=org.ontoware.rdf2go.impl.jena26.ModelFactoryImpl



# BackEnd Configuration

# -- FILE option:, you need to specify also the file name with the property backend.file.name 
#
# backend.type=FILE
backend.file.name=fileRepository2.ttl


# -- if DATABASE option is chosen for the backend, then the configuration defined
# -- above will be used; 
#
backend.type=DATABASE


# -- EXT_SERVER option valid just for sesame implementation; need to know also the 
# -- serverUrl and the repositoryId to connect. 
#
# backend.type=EXT_SERVER
backend.ext.serverUrl=http://okkam.few.vu.nl/openrdf-sesame
backend.ext.repositoryId=Cloud4SOA

# backend.mode=test